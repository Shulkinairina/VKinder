import database
from datetime import datetime
from io import BytesIO

from vkbottle import API, Keyboard, Callback, PhotoMessageUploader
from vkbottle.bot import BotLabeler, Message
from vkbottle.http import AiohttpClient

from modules import search, photos
import config

bl = BotLabeler()

api = API(config.VK_TOKEN)
uploader = PhotoMessageUploader(api, generate_attachment_strings=True)

http_client = AiohttpClient()


# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã
@bl.message(text="–ø–æ–∏—Å–∫")
async def search_user(message: Message):
    token = database.get_token(message.from_id)
    if token is None:
        await message.answer(
            "‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É !—Ä–µ–≥ token, –≥–¥–µ <token> - –≤–∞—à access_token. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–∞–π—Ç–µ: https://vkhost.github.io/"
        )
        return
    await message.answer(
        "üîç –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    )

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API
    api = API(token=token)

    # –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –Ω—É–∂–Ω—ã: age city groups sex
    # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await api.users.get(fields="sex,city,bdate")

    sex = 2 if user[0].sex.value == 1 else 1 if user[0].sex.value == 2 else None
    city = user[0].city.id
    age = datetime.now().year - int(user[0].bdate.split(".")[2])

    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    groups = await api.users.get_subscriptions(user_id=message.from_id)
    groups = groups.groups.items

    # –∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã
    users = await search.get(api, age, city, groups, sex)

    # —É–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–Ω–∫–µ—Ç—ã –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    blacklist = database.get_blacklist(message.from_id)
    if blacklist is None:
        blacklist = []

    new_blacklist = []
    for user in blacklist:
        new_blacklist.append(int(user[0]))

    blacklist = new_blacklist

    users = [user for user in users if user[0].id not in blacklist]

    # —É–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–Ω–∫–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫
    likes = database.get_likes(message.from_id)

    if likes is None:
        likes = []

    new_likes = []
    for like in likes:
        new_likes.append(int(like[0]))

    likes = new_likes

    users = [user for user in users if user[0].id not in likes]

    # –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç –Ω–µ –Ω–∞—à–ª–æ—Å—å
    if len(users) == 0:
        await message.answer("–ü–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç –Ω–µ –Ω–∞—à–ª–æ—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 10 —Å–∞–º—ã—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç
    for user in users[:10]:
        keyboard = Keyboard(inline=True)
        keyboard.add(Callback("üíñ", payload={"command": "like", "id": user[0].id}))
        keyboard.add(Callback("üíî", payload={"command": "dislike", "id": user[0].id}))

        # –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ø-3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        photos_user = await photos.get(api, user[0].id)
        if photos_user is None:
            continue
        attachments = []
        for photo in photos_user:
            photo = await http_client.request_content(photo)
            photo = BytesIO(photo)
            photo.seek(0)
            photo = await uploader.upload(photo.read())
            attachments.append(photo)

        attachments = ",".join(attachments)

        await message.answer(
            f"{user[0].first_name} {user[0].last_name}\n@id{user[0].id}\n\n–û–±—â–∏—Ö –≥—Ä—É–ø–ø: {user[2]}",
            attachment=attachments,
            keyboard=keyboard.get_json(),
        )
